#dd hardisk
sudo dd if=/dev/sda conv=sync,noerror bs=64K status=progress | gzip -c  > /PATH/TO/DRIVE/backup_image.img.gz
gunzip -c /PATH/TO/DRIVE/backup_image.img.gz | dd of=/dev/sda


#mount share
id -g ubuntu
id -u ubuntu
sudo mount -t cifs //192.168.1.11/jetserketser -o username=houjebek,password=<PASSWORD>,uid=1000,gid=1000 hv

#encode a video
ffmpeg -f x11grab -s 1366x768 -r 30 -i :0.0 -vcodec libx264 -preset ultrafast -crf 0 -threads 0 test.mp4

#SLAMLDUNK:
#minimal desktop script
#ros install script

#chown kalamos ~/.bash_history
#sudo date --set="26 June 2016 CET 13:38:00"

#ntp aptitude?
sudo apt-get update
sudo apt-get install nano htop git build-essential meld gitk cmake

sudo service network-manager start


Anyway, to install the same cuda version as we currently use (we may want to update it):
wget http://developer.download.nvidia.com/compute/cuda/6_5/rel/installers/cuda-repo-l4t-r21.2-6-5-prod_6.5-34_armhf.deb
sudo dpkg -i cuda-repo-l4t-r21.2-6-5-prod_6.5-34_armhf.deb
sudo apt-get update
sudo apt-get install cuda-toolkit-6-5
rm cuda-repo-l4t-r21.2-6-5-prod_6.5-34_armhf.deb


git config --global user.email "kevindehecker@hotmail.com"
git config --global user.name "Kevindehecker"


ssh-keygen -t rsa -b 4096 -C "kevindehecker@hotmail.com"
eval "$(ssh-agent -s)" #check if process exists
ssh-add ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub
#copy paste that, go to github, settings, add new ssh key


cd ~
mkdir kevin
cd kevin
git clone git@github.com:tudelft/OC2016Vision.git
cd OC2016Vision/
git submodule update --init
cd src/pprzlink
make pymessages
cd ../../drone/
mkdir build
cd build
cmake ..
make -j8


oude bash history:
diagnostic 
cat /etc/build.prop 
/tmp/serial.sh 
/tmp/serial.sh D26E 50
reboot



to get space back:
sudo apt-get purge         ros-indigo-rviz ros-indigo-rviz-imu-plugin ros-indigo-octomap-rviz-plugins         ros-indigo-rqt-plot
sudo apt-get purge ros-indigo*
sudo apt-get autoremove


add 
/home/kalamos/kevin/OC2016Vision/drone/startoutback.sh || true
service network-manager start
to /etc/rc.local

to fix the leds:
sudo nano /usr/bin/factory_mode.sh
put exit 1 just after #######


#caffe!
sudo apt-get install gstreamer1.0-tools gstreamer1.0-alsa   gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-ugly gstreamer1.0-plugins-bad gstreamer1.0-libav -y
gst-inspect-1.0 omxh264enc

sudo apt-get install libprotobuf-dev
sudo apt-get install libleveldb-dev 
sudo apt-get install libsnappy-dev 
sudo apt-get install libhdf5-serial-dev
sudo apt-get install protobuf-compiler
sudo apt-get install --no-install-recommends libboost-all-dev
sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-de
sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev
sudo apt-get install libatlas-base-dev

export PATH=$PATH:/usr/local/cuda/bin/
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib/
cd ~/kevin/
ls
git clone https://github.com/BVLC/caffe.git
cd caffe/
ls
cp Makefile.config.example Makefile.config
#make all -j4
#make test -j4
mkdir build
cd build
cmake -DBUILD_SHARED_LIBS=on  .. #-DCPU_ONLY=on
make -j8
make runtest

#oud!!!
cd ~/OC2016Vision/
git remote remove origin
git remote add origin git@github.com:tudelft/OC2016Vision.git
git fetch
git branch --set-upstream-to=origin/master master


#for neon compiling???
sudo apt-get install gcc-multilib g++-multilib



#factory:
#On your host, assuming factory was backup to '~/factory_backup/', type:
sudo mount -o remount,rw /factory
sudo mv /tmp/factory_backup/* /factory/
#Complete /factory partition with required files:
sudo /tmp/fix_factory.sh
#Reboot for the changes to take effect:

