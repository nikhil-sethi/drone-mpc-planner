from acados_template import AcadosOcp, AcadosOcpSolver, AcadosSimSolver, AcadosModel
import numpy as np
import scipy.linalg
from casadi import SX, vertcat
import matplotlib.pyplot as plt
from trajectory import MinVelAccJerkSnapCrackPop

def export_ode_model():
    model_name = 'minimalsystem'

    # set up states & controls
    x1      = SX.sym('x1')
    x2      = SX.sym('x2')

    F1 = SX.sym('F1')
    F2 = SX.sym('F2')
    u = vertcat(F1,F2)

    # xdot
    x1_dot      = SX.sym('x1_dot')
    x2_dot      = SX.sym('x2_dot')

    x = vertcat(x1, x1_dot, x2, x2_dot)
    xdot = SX.sym('xdot',x.size()[0],1)

    # dynamics
    f_expl = vertcat(x1_dot,
                     F1,
                     x2_dot,
                     F2
                     )

    f_impl = xdot - f_expl

    model = AcadosModel()
    model.f_impl_expr = f_impl
    model.f_expl_expr = f_expl
    model.x = x
    model.xdot = xdot
    model.u = u
    model.name = model_name

    return model

def main():
    # create ocp object to formulate the OCP
    ocp = AcadosOcp()

    # set model
    model = export_ode_model()
    ocp.model = model

    # Tf = 1.5
    dt = 0.05
    nx = model.x.size()[0]
    nu = model.u.size()[0]
    ny = nx + nu
    ny_e = nx
    N_horizon = 20
    Tf = N_horizon*dt

    Fmax =2
    setpoint = np.array([4,4])     
    x0 = np.array([0, 0.0, 0.0, 0.0])

    # set dimensions
    ocp.dims.N = N_horizon

    # set cost module
    ocp.cost.cost_type = 'LINEAR_LS'
    ocp.cost.cost_type_e = 'LINEAR_LS'

    Q_mat = np.diag([1e1, 1e0, 1e1, 1e0])
    R_mat = np.diag([1e-2, 1e-2])

    ocp.cost.W = scipy.linalg.block_diag(Q_mat, R_mat)
    ocp.cost.W_e = 1*Q_mat

    ocp.cost.Vx = np.zeros((ny, nx))
    ocp.cost.Vx[:nx,:nx] = np.eye(nx)

    Vu = np.zeros((ny, nu))
    ocp.cost.Vu = Vu

    ocp.cost.Vx_e = np.eye(nx)

    ocp.cost.yref  = np.array([setpoint[0],0,setpoint[1],0,0,0]) #np.zeros((ny, ))
    ocp.cost.yref_e = np.array([setpoint[0],0,setpoint[1],0]) #np.zeros((ny_e, ))

    # linear state constraints
    ocp.constraints.constr_type = 'BGH'
    # ocp.constraints.constr_type = 'BGP'
    ocp.constraints.lbu = np.array([-Fmax,-Fmax])
    ocp.constraints.ubu = np.array([+Fmax,+Fmax])
    ocp.constraints.x0 = x0
    ocp.constraints.idxbu = np.array([0, 1])


    # TRAJECTORY GENERATION

    Nsim = 150
    dt_traj = 0.05
    t_ref = np.linspace(0, Nsim*dt_traj, Nsim+1)
    # x_ref = np.array([np.sin(t_ref), np.cos(t_ref), np.cos(t_ref), -np.sin(t_ref)]).T
    # u_ref = np.array([np.cos(t_ref), -np.sin(t_ref)]).T

    wps = np.array([
    [0., 1., -1],
    [0., 2., 5]
    ]).T


    tf = 5
    n = int(tf/dt_traj)+2
    mvajscp = MinVelAccJerkSnapCrackPop(order=2, waypoints=wps.T, time=tf)
    pos = mvajscp.optimize(plan_order = 0, num_pts=n)
    vel = mvajscp.optimize(plan_order = 1, num_pts=n)
    acc = mvajscp.optimize(plan_order = 2, num_pts=n)
    x_ref = np.hstack([pos[:,0][:, np.newaxis], vel[:,0][:, np.newaxis], pos[:,1][:, np.newaxis], vel[:,1][:, np.newaxis]])
    u_ref = acc

    traj = np.array([[[-0.   ,  -0.    ],
                    [ 0.0002 , 0.0005  ],
                    [ 0.001  , 0.0019  ],
                    [ 0.0021 , 0.0043  ],
                    [ 0.0038 , 0.0076  ],
                    [ 0.0059 , 0.0118  ],
                    [ 0.0084 , 0.0169  ],
                    [ 0.0114 , 0.0229  ],
                    [ 0.0149 , 0.0297  ],
                    [ 0.0187 , 0.0375  ],
                    [ 0.023  , 0.046   ],
                    [ 0.0277 , 0.0555  ],
                    [ 0.0329 , 0.0657  ],
                    [ 0.0384 , 0.0768  ],
                    [ 0.0443 , 0.0887  ],
                    [ 0.0507 , 0.1013  ],
                    [ 0.0574 , 0.1147  ],
                    [ 0.0645 , 0.129   ],
                    [ 0.072  , 0.1439  ],
                    [ 0.0798 , 0.1596  ],
                    [ 0.088  , 0.1761  ],
                    [ 0.0966 , 0.1932  ],
                    [ 0.1055 , 0.2111  ],
                    [ 0.1148 , 0.2296  ],
                    [ 0.1244 , 0.2488  ],
                    [ 0.1344 , 0.2687  ],
                    [ 0.1446 , 0.2893  ],
                    [ 0.1553 , 0.3105  ],
                    [ 0.1662 , 0.3323  ],
                    [ 0.1774 , 0.3548  ],
                    [ 0.1889 , 0.3779  ],
                    [ 0.2008 , 0.4015  ],
                    [ 0.2129 , 0.4258  ],
                    [ 0.2253 , 0.4506  ],
                    [ 0.238  , 0.476   ],
                    [ 0.2509 , 0.5019  ],
                    [ 0.2642 , 0.5283  ],
                    [ 0.2777 , 0.5553  ],
                    [ 0.2914 , 0.5828  ],
                    [ 0.3054 , 0.6108  ],
                    [ 0.3197 , 0.6393  ],
                    [ 0.3341 , 0.6683  ],
                    [ 0.3488 , 0.6977  ],
                    [ 0.3638 , 0.7275  ],
                    [ 0.3789 , 0.7578  ],
                    [ 0.3943 , 0.7886  ],
                    [ 0.4099 , 0.8197  ],
                    [ 0.4256 , 0.8513  ],
                    [ 0.4416 , 0.8832  ],
                    [ 0.4578 , 0.9155  ],
                    [ 0.4741 , 0.9482  ],
                    [ 0.4906 , 0.9812  ],
                    [ 0.5073 , 1.0146  ],
                    [ 0.5242 , 1.0483  ],
                    [ 0.5412 , 1.0823  ],
                    [ 0.5583 , 1.1166  ],
                    [ 0.5756 , 1.1513  ],
                    [ 0.5931 , 1.1862  ],
                    [ 0.6107 , 1.2213  ],
                    [ 0.6284 , 1.2567  ],
                    [ 0.6462 , 1.2924  ],
                    [ 0.6641 , 1.3283  ],
                    [ 0.6822 , 1.3644  ],
                    [ 0.7004 , 1.4007  ],
                    [ 0.7186 , 1.4372  ],
                    [ 0.737  , 1.4739  ],
                    [ 0.7554 , 1.5108  ],
                    [ 0.7739 , 1.5478  ],
                    [ 0.7925 , 1.585   ],
                    [ 0.8111 , 1.6223  ],
                    [ 0.8299 , 1.6597  ],
                    [ 0.8486 , 1.6972  ],
                    [ 0.8674 , 1.7349  ],
                    [ 0.8863 , 1.7726  ],
                    [ 0.9052 , 1.8104  ],
                    [ 0.9241 , 1.8482  ],
                    [ 0.9431 , 1.8861  ],
                    [ 0.962  , 1.9241  ],
                    [ 0.981  , 1.962   ],
                    [ 1.     , 2.      ],
                    [ 1.     , 2.      ],
                    [ 1.017  , 2.034   ],
                    [ 1.034  , 2.0679  ],
                    [ 1.0509 , 2.1018  ],
                    [ 1.0679 , 2.1357  ],
                    [ 1.0848 , 2.1696  ],
                    [ 1.1017 , 2.2034  ],
                    [ 1.1186 , 2.2371  ],
                    [ 1.1354 , 2.2708  ],
                    [ 1.1522 , 2.3044  ],
                    [ 1.1689 , 2.3378  ],
                    [ 1.1856 , 2.3712  ],
                    [ 1.2022 , 2.4044  ],
                    [ 1.2188 , 2.4376  ],
                    [ 1.2353 , 2.4705  ],
                    [ 1.2517 , 2.5033  ],
                    [ 1.268  , 2.536   ],
                    [ 1.2842 , 2.5685  ],
                    [ 1.3004 , 2.6008  ],
                    [ 1.3164 , 2.6329  ],
                    [ 1.3324 , 2.6648  ],
                    [ 1.3482 , 2.6965  ],
                    [ 1.364  , 2.7279  ],
                    [ 1.3796 , 2.7591  ],
                    [ 1.395  , 2.7901  ],
                    [ 1.4104 , 2.8208  ],
                    [ 1.4256 , 2.8512  ],
                    [ 1.4407 , 2.8813  ],
                    [ 1.4556 , 2.9112  ],
                    [ 1.4704 , 2.9407  ],
                    [ 1.485  , 2.97    ],
                    [ 1.4994 , 2.9989  ],
                    [ 1.5137 , 3.0274  ],
                    [ 1.5278 , 3.0556  ],
                    [ 1.5417 , 3.0835  ],
                    [ 1.5555 , 3.111   ],
                    [ 1.569  , 3.1381  ],
                    [ 1.5824 , 3.1648  ],
                    [ 1.5956 , 3.1911  ],
                    [ 1.6085 , 3.217   ],
                    [ 1.6212 , 3.2425  ],
                    [ 1.6338 , 3.2675  ],
                    [ 1.6461 , 3.2921  ],
                    [ 1.6581 , 3.3162  ],
                    [ 1.67   , 3.3399  ],
                    [ 1.6815 , 3.3631  ],
                    [ 1.6929 , 3.3858  ],
                    [ 1.704  , 3.408   ],
                    [ 1.7148 , 3.4297  ],
                    [ 1.7254 , 3.4508  ],
                    [ 1.7357 , 3.4715  ],
                    [ 1.7458 , 3.4916  ],
                    [ 1.7555 , 3.5111  ],
                    [ 1.765  , 3.5301  ],
                    [ 1.7742 , 3.5484  ],
                    [ 1.7831 , 3.5662  ],
                    [ 1.7917 , 3.5834  ],
                    [ 1.8    , 3.6     ],
                    [ 1.808  , 3.616   ],
                    [ 1.8157 , 3.6313  ],
                    [ 1.823  , 3.646   ],
                    [ 1.83   , 3.6601  ],
                    [ 1.8367 , 3.6735  ],
                    [ 1.8431 , 3.6862  ],
                    [ 1.8491 , 3.6982  ],
                    [ 1.8548 , 3.7095  ],
                    [ 1.8601 , 3.7201  ],
                    [ 1.865  , 3.73    ],
                    [ 1.8696 , 3.7392  ],
                    [ 1.8738 , 3.7476  ],
                    [ 1.8776 , 3.7553  ],
                    [ 1.8811 , 3.7622  ],
                    [ 1.8842 , 3.7684  ],
                    [ 1.8869 , 3.7737  ],
                    [ 1.8891 , 3.7783  ],
                    [ 1.891  , 3.782   ],
                    [ 1.8925 , 3.785   ],
                    [ 1.8935 , 3.7871  ],
                    [ 1.8942 , 3.7884  ],
                    [ 1.8944 , 3.7888  ]],

                    # velocity
                    [[-0.    , -0.      ],
                    [ 0.0089 , 0.0179  ],
                    [ 0.0178 , 0.0355  ],
                    [ 0.0265 , 0.0529  ],
                    [ 0.0351 , 0.0701  ],
                    [ 0.0435 , 0.0871  ],
                    [ 0.0519 , 0.1038  ],
                    [ 0.0602 , 0.1203  ],
                    [ 0.0683 , 0.1366  ],
                    [ 0.0763 , 0.1526  ],
                    [ 0.0842 , 0.1685  ],
                    [ 0.092  , 0.1841  ],
                    [ 0.0997 , 0.1994  ],
                    [ 0.1073 , 0.2146  ],
                    [ 0.1147 , 0.2295  ],
                    [ 0.1221 , 0.2442  ],
                    [ 0.1293 , 0.2586  ],
                    [ 0.1364 , 0.2728  ],
                    [ 0.1434 , 0.2868  ],
                    [ 0.1503 , 0.3006  ],
                    [ 0.1571 , 0.3142  ],
                    [ 0.1637 , 0.3275  ],
                    [ 0.1703 , 0.3406  ],
                    [ 0.1767 , 0.3534  ],
                    [ 0.183  , 0.3661  ],
                    [ 0.1892 , 0.3785  ],
                    [ 0.1953 , 0.3907  ],
                    [ 0.2013 , 0.4026  ],
                    [ 0.2072 , 0.4143  ],
                    [ 0.2129 , 0.4258  ],
                    [ 0.2185 , 0.4371  ],
                    [ 0.2241 , 0.4481  ],
                    [ 0.2295 , 0.459   ],
                    [ 0.2348 , 0.4695  ],
                    [ 0.2399 , 0.4799  ],
                    [ 0.245  , 0.49    ],
                    [ 0.25   , 0.4999  ],
                    [ 0.2548 , 0.5096  ],
                    [ 0.2595 , 0.5191  ],
                    [ 0.2641 , 0.5283  ],
                    [ 0.2686 , 0.5373  ],
                    [ 0.273  , 0.546   ],
                    [ 0.2773 , 0.5546  ],
                    [ 0.2814 , 0.5629  ],
                    [ 0.2855 , 0.571   ],
                    [ 0.2894 , 0.5788  ],
                    [ 0.2932 , 0.5864  ],
                    [ 0.2969 , 0.5938  ],
                    [ 0.3005 , 0.601   ],
                    [ 0.304  , 0.608   ],
                    [ 0.3073 , 0.6147  ],
                    [ 0.3106 , 0.6212  ],
                    [ 0.3137 , 0.6274  ],
                    [ 0.3167 , 0.6335  ],
                    [ 0.3196 , 0.6393  ],
                    [ 0.3224 , 0.6448  ],
                    [ 0.3251 , 0.6502  ],
                    [ 0.3277 , 0.6553  ],
                    [ 0.3301 , 0.6602  ],
                    [ 0.3324 , 0.6649  ],
                    [ 0.3347 , 0.6693  ],
                    [ 0.3368 , 0.6735  ],
                    [ 0.3388 , 0.6775  ],
                    [ 0.3406 , 0.6813  ],
                    [ 0.3424 , 0.6848  ],
                    [ 0.344  , 0.6881  ],
                    [ 0.3456 , 0.6912  ],
                    [ 0.347  , 0.694   ],
                    [ 0.3483 , 0.6966  ],
                    [ 0.3495 , 0.699   ],
                    [ 0.3506 , 0.7012  ],
                    [ 0.3516 , 0.7031  ],
                    [ 0.3524 , 0.7048  ],
                    [ 0.3532 , 0.7063  ],
                    [ 0.3538 , 0.7076  ],
                    [ 0.3543 , 0.7086  ],
                    [ 0.3547 , 0.7094  ],
                    [ 0.355  , 0.7099  ],
                    [ 0.3551 , 0.7103  ],
                    [ 0.3552 , 0.7104  ],
                    [ 0.3552 , 0.7104  ],
                    [ 0.3551 , 0.7103  ],
                    [ 0.355  , 0.7099  ],
                    [ 0.3547 , 0.7094  ],
                    [ 0.3543 , 0.7086  ],
                    [ 0.3538 , 0.7076  ],
                    [ 0.3532 , 0.7063  ],
                    [ 0.3524 , 0.7048  ],
                    [ 0.3516 , 0.7031  ],
                    [ 0.3506 , 0.7012  ],
                    [ 0.3495 , 0.699   ],
                    [ 0.3483 , 0.6966  ],
                    [ 0.347  , 0.694   ],
                    [ 0.3456 , 0.6912  ],
                    [ 0.344  , 0.6881  ],
                    [ 0.3424 , 0.6848  ],
                    [ 0.3406 , 0.6813  ],
                    [ 0.3388 , 0.6775  ],
                    [ 0.3368 , 0.6735  ],
                    [ 0.3347 , 0.6693  ],
                    [ 0.3324 , 0.6649  ],
                    [ 0.3301 , 0.6602  ],
                    [ 0.3277 , 0.6553  ],
                    [ 0.3251 , 0.6502  ],
                    [ 0.3224 , 0.6448  ],
                    [ 0.3196 , 0.6393  ],
                    [ 0.3167 , 0.6335  ],
                    [ 0.3137 , 0.6274  ],
                    [ 0.3106 , 0.6212  ],
                    [ 0.3073 , 0.6147  ],
                    [ 0.304  , 0.608   ],
                    [ 0.3005 , 0.601   ],
                    [ 0.2969 , 0.5938  ],
                    [ 0.2932 , 0.5864  ],
                    [ 0.2894 , 0.5788  ],
                    [ 0.2855 , 0.571   ],
                    [ 0.2814 , 0.5629  ],
                    [ 0.2773 , 0.5546  ],
                    [ 0.273  , 0.546   ],
                    [ 0.2686 , 0.5373  ],
                    [ 0.2641 , 0.5283  ],
                    [ 0.2595 , 0.5191  ],
                    [ 0.2548 , 0.5096  ],
                    [ 0.25   , 0.4999  ],
                    [ 0.245  , 0.49    ],
                    [ 0.2399 , 0.4799  ],
                    [ 0.2348 , 0.4695  ],
                    [ 0.2295 , 0.459   ],
                    [ 0.2241 , 0.4481  ],
                    [ 0.2185 , 0.4371  ],
                    [ 0.2129 , 0.4258  ],
                    [ 0.2072 , 0.4143  ],
                    [ 0.2013 , 0.4026  ],
                    [ 0.1953 , 0.3907  ],
                    [ 0.1892 , 0.3785  ],
                    [ 0.183  , 0.3661  ],
                    [ 0.1767 , 0.3534  ],
                    [ 0.1703 , 0.3406  ],
                    [ 0.1637 , 0.3275  ],
                    [ 0.1571 , 0.3142  ],
                    [ 0.1503 , 0.3006  ],
                    [ 0.1434 , 0.2868  ],
                    [ 0.1364 , 0.2728  ],
                    [ 0.1293 , 0.2586  ],
                    [ 0.1221 , 0.2442  ],
                    [ 0.1147 , 0.2295  ],
                    [ 0.1073 , 0.2146  ],
                    [ 0.0997 , 0.1994  ],
                    [ 0.092  , 0.1841  ],
                    [ 0.0842 , 0.1685  ],
                    [ 0.0763 , 0.1526  ],
                    [ 0.0683 , 0.1366  ],
                    [ 0.0602 , 0.1203  ],
                    [ 0.0519 , 0.1038  ],
                    [ 0.0435 , 0.0871  ],
                    [ 0.0351 , 0.0701  ],
                    [ 0.0265 , 0.0529  ],
                    [ 0.0178 , 0.0355  ],
                    [ 0.0089 , 0.0179  ],
                    [ 0.     , 0.      ]],

                    # accleration
                    [[ 0.1682,  0.3364  ],
                    [ 0.1661 , 0.3322  ],
                    [ 0.164  , 0.3279  ],
                    [ 0.1618 , 0.3237  ],
                    [ 0.1597 , 0.3194  ],
                    [ 0.1576 , 0.3152  ],
                    [ 0.1554 , 0.3109  ],
                    [ 0.1533 , 0.3066  ],
                    [ 0.1512 , 0.3024  ],
                    [ 0.1491 , 0.2981  ],
                    [ 0.1469 , 0.2939  ],
                    [ 0.1448 , 0.2896  ],
                    [ 0.1427 , 0.2853  ],
                    [ 0.1405 , 0.2811  ],
                    [ 0.1384 , 0.2768  ],
                    [ 0.1363 , 0.2726  ],
                    [ 0.1342 , 0.2683  ],
                    [ 0.132  , 0.264   ],
                    [ 0.1299 , 0.2598  ],
                    [ 0.1278 , 0.2555  ],
                    [ 0.1256 , 0.2513  ],
                    [ 0.1235 , 0.247   ],
                    [ 0.1214 , 0.2428  ],
                    [ 0.1192 , 0.2385  ],
                    [ 0.1171 , 0.2342  ],
                    [ 0.115  , 0.23    ],
                    [ 0.1129 , 0.2257  ],
                    [ 0.1107 , 0.2215  ],
                    [ 0.1086 , 0.2172  ],
                    [ 0.1065 , 0.2129  ],
                    [ 0.1043 , 0.2087  ],
                    [ 0.1022 , 0.2044  ],
                    [ 0.1001 , 0.2002  ],
                    [ 0.098  , 0.1959  ],
                    [ 0.0958 , 0.1916  ],
                    [ 0.0937 , 0.1874  ],
                    [ 0.0916 , 0.1831  ],
                    [ 0.0894 , 0.1789  ],
                    [ 0.0873 , 0.1746  ],
                    [ 0.0852 , 0.1704  ],
                    [ 0.083  , 0.1661  ],
                    [ 0.0809 , 0.1618  ],
                    [ 0.0788 , 0.1576  ],
                    [ 0.0767 , 0.1533  ],
                    [ 0.0745 , 0.1491  ],
                    [ 0.0724 , 0.1448  ],
                    [ 0.0703 , 0.1405  ],
                    [ 0.0681 , 0.1363  ],
                    [ 0.066  , 0.132   ],
                    [ 0.0639 , 0.1278  ],
                    [ 0.0618 , 0.1235  ],
                    [ 0.0596 , 0.1192  ],
                    [ 0.0575 , 0.115   ],
                    [ 0.0554 , 0.1107  ],
                    [ 0.0532 , 0.1065  ],
                    [ 0.0511 , 0.1022  ],
                    [ 0.049  , 0.098   ],
                    [ 0.0468 , 0.0937  ],
                    [ 0.0447 , 0.0894  ],
                    [ 0.0426 , 0.0852  ],
                    [ 0.0405 , 0.0809  ],
                    [ 0.0383 , 0.0767  ],
                    [ 0.0362 , 0.0724  ],
                    [ 0.0341 , 0.0681  ],
                    [ 0.0319 , 0.0639  ],
                    [ 0.0298 , 0.0596  ],
                    [ 0.0277 , 0.0554  ],
                    [ 0.0256 , 0.0511  ],
                    [ 0.0234 , 0.0468  ],
                    [ 0.0213 , 0.0426  ],
                    [ 0.0192 , 0.0383  ],
                    [ 0.017  , 0.0341  ],
                    [ 0.0149 , 0.0298  ],
                    [ 0.0128 , 0.0256  ],
                    [ 0.0106 , 0.0213  ],
                    [ 0.0085 , 0.017   ],
                    [ 0.0064 , 0.0128  ],
                    [ 0.0043 , 0.0085  ],
                    [ 0.0021 , 0.0043  ],
                    [ 0.     , 0.      ],
                    [ 0.     , 0.      ],
                    [-0.0024 ,-0.0048  ],
                    [-0.0048 ,-0.0095  ],
                    [-0.0071 ,-0.0143  ],
                    [-0.0095 ,-0.019   ],
                    [-0.0119 ,-0.0238  ],
                    [-0.0143 ,-0.0286  ],
                    [-0.0167 ,-0.0333  ],
                    [-0.019  ,-0.0381  ],
                    [-0.0214 ,-0.0429  ],
                    [-0.0238 ,-0.0476  ],
                    [-0.0262 ,-0.0524  ],
                    [-0.0286 ,-0.0571  ],
                    [-0.031  ,-0.0619  ],
                    [-0.0333 ,-0.0667  ],
                    [-0.0357 ,-0.0714  ],
                    [-0.0381 ,-0.0762  ],
                    [-0.0405 ,-0.0809  ],
                    [-0.0429 ,-0.0857  ],
                    [-0.0452 ,-0.0905  ],
                    [-0.0476 ,-0.0952  ],
                    [-0.05   ,-0.1     ],
                    [-0.0524 ,-0.1048  ],
                    [-0.0548 ,-0.1095  ],
                    [-0.0571 ,-0.1143  ],
                    [-0.0595 ,-0.119   ],
                    [-0.0619 ,-0.1238  ],
                    [-0.0643 ,-0.1286  ],
                    [-0.0667 ,-0.1333  ],
                    [-0.069  ,-0.1381  ],
                    [-0.0714 ,-0.1428  ],
                    [-0.0738 ,-0.1476  ],
                    [-0.0762 ,-0.1524  ],
                    [-0.0786 ,-0.1571  ],
                    [-0.0809 ,-0.1619  ],
                    [-0.0833 ,-0.1667  ],
                    [-0.0857 ,-0.1714  ],
                    [-0.0881 ,-0.1762  ],
                    [-0.0905 ,-0.1809  ],
                    [-0.0929 ,-0.1857  ],
                    [-0.0952 ,-0.1905  ],
                    [-0.0976 ,-0.1952  ],
                    [-0.1    ,-0.2     ],
                    [-0.1024 ,-0.2048  ],
                    [-0.1048 ,-0.2095  ],
                    [-0.1071 ,-0.2143  ],
                    [-0.1095 ,-0.219   ],
                    [-0.1119 ,-0.2238  ],
                    [-0.1143 ,-0.2286  ],
                    [-0.1167 ,-0.2333  ],
                    [-0.119  ,-0.2381  ],
                    [-0.1214 ,-0.2428  ],
                    [-0.1238 ,-0.2476  ],
                    [-0.1262 ,-0.2524  ],
                    [-0.1286 ,-0.2571  ],
                    [-0.1309 ,-0.2619  ],
                    [-0.1333 ,-0.2667  ],
                    [-0.1357 ,-0.2714  ],
                    [-0.1381 ,-0.2762  ],
                    [-0.1405 ,-0.2809  ],
                    [-0.1428 ,-0.2857  ],
                    [-0.1452 ,-0.2905  ],
                    [-0.1476 ,-0.2952  ],
                    [-0.15   ,-0.3     ],
                    [-0.1524 ,-0.3047  ],
                    [-0.1548 ,-0.3095  ],
                    [-0.1571 ,-0.3143  ],
                    [-0.1595 ,-0.319   ],
                    [-0.1619 ,-0.3238  ],
                    [-0.1643 ,-0.3286  ],
                    [-0.1667 ,-0.3333  ],
                    [-0.169  ,-0.3381  ],
                    [-0.1714 ,-0.3428  ],
                    [-0.1738 ,-0.3476  ],
                    [-0.1762 ,-0.3524  ],
                    [-0.1786 ,-0.3571  ],
                    [-0.1809 ,-0.3619  ],
                    [-0.1833 ,-0.3666  ],
                    [-0.1857 ,-0.3714  ],
                    [-0.1881 ,-0.3762 ]]])

    # non-linear (BGH) state ,constraintl,
    ocp.model.con_h_expr = (model.x[0]-1)**2 + (model.x[2]-2)**2 # x2,
    # ocp.model.con_h_expr = (model.u[0]**2) #+ (model.u[1])  x2,
    ocp.constraints.lh = np.array([1.2**2])      # us,
    ocp.constraints.uh = np.array([100**2])  #,
   
    # slack variable configun:,
    nsh = 1
    ocp.constraints.lsh = np.zeros(nsh)             # Lower bounds on slacks corresponding to soft lower bounds for nonlinear conts,
    ocp.constraints.ush = np.zeros(nsh)             # Lower bounds on slacks corresponding to soft upper bounds for nonlinear conts,
    ocp.constraints.idxsh = np.array(range(nsh))
    ns = 1
    ocp.cost.zl = 10e4 * np.ones((ns,)) # gradient wrt lower slack at intermediate shooting nodes (11),
    ocp.cost.Zl = 1 * np.ones((ns,)) # diagonal of Hessian wrt lower slack at intermediate shooting nodes (1 to N-1)
    ocp.cost.zu = 0 * np.ones((ns,))    
    ocp.cost.Zu = 1 * np.ones((ns,))  


    # default solver params
    ocp.solver_options.qp_solver = 'PARTIAL_CONDENSING_HPIPM' # FULL_CONDENSING_QPOASES, FULL_CONDENSING_HPIPM
    ocp.solver_options.hessian_approx = 'GAUSS_NEWTON'
    ocp.solver_options.integrator_type = 'ERK'
    ocp.solver_options.nlp_solver_type = 'SQP_RTI'
    ocp.solver_options.qp_solver_cond_N = N_horizon

    # set prediction horizon
    ocp.solver_options.tf = Tf

    solver_json = 'acados_ocp_' + model.name + '.json'
    acados_ocp_solver = AcadosOcpSolver(ocp, json_file = solver_json)

    # create an integrator with the same settings as used in the OCP solver.
    acados_integrator = AcadosSimSolver(ocp, json_file = solver_json)

    
    simX = np.ndarray((Nsim+1, nx))
    simU = np.ndarray((Nsim, nu))

    simX[0,:] = x0
    xy_predictions = np.zeros((N_horizon,2))    

    # initialize figure
    fig0 = plt.figure()
    ax1 = fig0.add_subplot(1,1,1)
    circle = plt.Circle((1, 2), radius=1, color='blue',alpha=0.1,label='constraint')
    ax1.plot(setpoint[0],setpoint[1], 'go',label='target')
    ax1.add_patch(circle); ax1.set_xlabel('x1'); ax1.set_ylabel('x2'); ax1.grid()
    ax1.plot(x_ref[:,0],x_ref[:,2],'r.')
    ax1.legend()

    # closed loop
    runOnce = True
    for i in range(Nsim):
        cid = np.argmin(np.linalg.norm(simX[i, [0,2]] - x_ref[:, [0,2]], axis=1))
        idf = max(cid, i)
        # idf = cid
        for j in range(N_horizon):
            
            idx = min(j + idf, n-1)
            print(idf, idx)
            yref = np.array([x_ref[idx][0], x_ref[idx][1], x_ref[idx][2], x_ref[idx][3], u_ref[idx][0], u_ref[idx][1]])
            # yref = np.array([x_ref[idx][0], x_ref[idx][1], x_ref[idx][2], x_ref[idx][3], 0,0])

            acados_ocp_solver.set(j, "yref", yref)
        
        # for j in range(self.N-split, self.N):
        #     self.solver.set(j, "yref", traj[1])
        idx_n = min(idf + N_horizon, n-1)
        yref_n = np.array([x_ref[idx_n][0], x_ref[idx_n][1], x_ref[idx_n][2], x_ref[idx_n][3]])
        # print(yref_n)
        acados_ocp_solver.set(N_horizon, "yref", yref_n)


        # solve ocp and get next control input
        try:
            simU[i,:] = acados_ocp_solver.solve_for_x0(x0_bar = simX[i, :])
        except:
            ax1.plot(simX[i,0],simX[i,2],'ro',label='infeasible x0')
            ax1.legend()
            break
        
        # extract solution state info
        for j in range(N_horizon):
            xy_predictions[j,0] = acados_ocp_solver.get(j, "x")[0] #x1
            xy_predictions[j,1] = acados_ocp_solver.get(j, "x")[2] #x2
        


        # update figure with predictions
        ax1.plot(simX[i,0],simX[i,2],'bo')
        
        ax1.plot(xy_predictions[:,0],xy_predictions[:,1],'ko',alpha=0.1, markersize=3)
        # print(np.linalg.norm(simU[i,:]))
        # print(sum(simU[i,:]))
        # print(sum(simU[0,:]))
        plt.show(block=False)  # put a breakpoint here to F5 and plot through the for-loop.
        plt.pause(0.00001)
        # plt.cla()
        # simulate system
        simX[i+1, :] = acados_integrator.simulate(x=simX[i, :], u=simU[i,:])
        
    # plot results    
    plt.show(block=True)





if __name__ == '__main__':
    main()