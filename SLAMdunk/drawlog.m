clear
close all
%% Import data from text file.
% Script for importing data from the following text file:
%
%    I:\share\mu-g\SLAMdunk\build\log.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2017/08/12 11:35:25

%% Initialize variables.
filename = 'I:\share\mu-g\SLAMdunk\build\log.txt';
delimiter = ';';

%% Read columns of data as strings:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%s%s%s%s%s%s%s%s%s%s%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter,  'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Convert the contents of columns containing numeric strings to numbers.
% Replace non-numeric strings with NaN.
raw = repmat({''},length(dataArray{1}),length(dataArray)-1);
for col=1:length(dataArray)-1
    raw(1:length(dataArray{col}),col) = dataArray{col};
end
numericData = NaN(size(dataArray{1},1),size(dataArray,2));

for col=[1,2,3,4,5,6,7,8,9,10,11,12,13]
    % Converts strings in the input cell array to numbers. Replaced non-numeric
    % strings with NaN.
    rawData = dataArray{col};
    for row=1:size(rawData, 1);
        % Create a regular expression to detect and remove non-numeric prefixes and
        % suffixes.
        regexstr = '(?<prefix>.*?)(?<numbers>([-]*(\d+[\,]*)+[\.]{0,1}\d*[eEdD]{0,1}[-+]*\d*[i]{0,1})|([-]*(\d+[\,]*)*[\.]{1,1}\d+[eEdD]{0,1}[-+]*\d*[i]{0,1}))(?<suffix>.*)';
        try
            result = regexp(rawData{row}, regexstr, 'names');
            numbers = result.numbers;
            
            % Detected commas in non-thousand locations.
            invalidThousandsSeparator = false;
            if any(numbers==',');
                thousandsRegExp = '^\d+?(\,\d{3})*\.{0,1}\d*$';
                if isempty(regexp(numbers, thousandsRegExp, 'once'));
                    numbers = NaN;
                    invalidThousandsSeparator = true;
                end
            end
            % Convert numeric strings to numbers.
            if ~invalidThousandsSeparator;
                numbers = textscan(strrep(numbers, ',', ''), '%f');
                numericData(row, col) = numbers{1};
                raw{row, col} = numbers{1};
            end
        catch me
        end
    end
end


%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Allocate imported array to column variable names
posErrX = cell2mat(raw(2:end, 1));
posErrY = cell2mat(raw(2:end, 2));
posErrZ = cell2mat(raw(2:end, 3));
hoverthrottle = cell2mat(raw(2:end, 4));
autoThrottle = cell2mat(raw(2:end, 5));
autoRoll = cell2mat(raw(2:end, 6));
autoPitch = cell2mat(raw(2:end, 7));
autoYaw = cell2mat(raw(2:end, 8));
joyThrottle = cell2mat(raw(2:end, 9));
joyRoll = cell2mat(raw(2:end, 10));
joyPitch = cell2mat(raw(2:end, 11));
joyYaw = cell2mat(raw(2:end, 12));
joySwitch = cell2mat(raw(2:end, 13));


%%derive / calc some stuff:

sposErrX = smooth(posErrX);
sposErrY = smooth(posErrY);
sposErrZ = smooth(posErrZ);
velX = sposErrX(1:end-1) - sposErrX(2:end);
velY = sposErrY (1:end-1) - sposErrY(2:end);
velZ = sposErrZ (1:end-1) - sposErrZ(2:end);




%% Clear temporary variables
clearvars filename delimiter formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me R;

A(:,1) = posErrY ; 
A(:,2) = 0;
A(:,3) = -(autoThrottle - 1580) / (1650 - 1580) - 2.5; %heuristically scaled!
A(:,4) = joySwitch ; 

subplot(3,1,1)
plot(A)
legend('PosErrY [m]','Pos setpoint','- scaled throttle', 'Stabilization ON')
subplot(3,1,2)
plot(velY)
legend('velocity Y')
subplot(3,1,3)
plot(hoverthrottle)
legend('hover throttle')